html * {
  max-height: 99999rem;
}

html *,
html ::before,
html ::after {
  box-sizing: border-box;
}

body {
  min-width: $screen-min-width;
}

.page-width {
  @extend .width-100p;
  @extend .center-by-margins;
  max-width: $screen-max-width;
  min-width: $screen-min-width;
}

.container {
  @extend .width-100p;
  @extend .padding-1-h;
  @extend .center-by-margins;
  max-width: $screen-max-width;
  min-width: $screen-min-width;
}

.center-by-margins {
  margin-left: auto;
  margin-right: auto;
}

.width-400px {
  width: 400px;
}

.max-width-md {
  max-width: $width-md;
}

.height-100vh {
  height: 100vh;
}

.min-height-100vh {
  min-height: 100vh;
}

.stretch-to-viewport-v {
  min-height: 100vh;
  @extend .col-start-stretch;
}

@mixin grid($cols) {
  display: flex;
  flex-wrap: wrap;

  & > * {
    width: calc(1/#{$cols} * (100% - #{$cols - 1}rem));
    flex-basis: auto;
  }

  & > :not(:nth-child(-n+#{$cols})) {
    margin-top: 1rem;
  }

  & > :not(:nth-child(#{$cols}n)) {
    margin-right: 1rem;
  }
}

// Requires `position: relative` on ancestor.
.abs-bottom-center {
  position: absolute;
  top: 100%;
  left: 100%;
  transform: translateX(-50%) translateY(0.5rem);
}

.abs-right {
  @extend .abs-t;
  @extend .abs-r;
}

.visibility-hidden {
  visibility: hidden;
}

.width-20p {
  width: 20%;
}

.width-30p {
  width: 30%;
}

.width-40p {
  width: 40%;
}
